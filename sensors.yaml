#################################################################
## Sensors
#################################################################

        ##########################################################
        ## System
        ##########################################################

  - platform: time_date
    display_options:
      - 'date_time'
      - 'time'     
  - platform: cpuspeed
    name: CPU
  - platform: systemmonitor
    resources:
      - type: memory_free
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot

        ##########################################################
        ## Pi Hole
        ##########################################################

  - platform: command_line
    name: PiHole 1 Status
    command: curl -X GET 'http://REDACTED.4/REDACTED/api.php?status'
    value_template: "{{ value_json.status == 'enabled' }}"

  - platform: command_line
    name: PiHole 2 Status
    command: curl -X GET 'http://REDACTED.5/REDACTED/api.php?status'
    value_template: "{{ value_json.status == 'enabled' }}"

        ##########################################################
        ## Ring
        ##########################################################

#  - platform: ring
#    monitored_conditions:
#      - battery
#      - last_activity
#      - last_ding
#      - last_motion
#      - volume

        ##########################################################
        ## QNAP NAS
        ##########################################################

  - platform: qnap
    host: REDACTED.100
    port: 443
    username: !secret secret_qnap_username
    password: !secret secret_qnap_password
    ssl: true
    verify_ssl: false
    monitored_conditions:
      - status
      - memory_percent_used
      - system_temp
      - cpu_usage
      - cpu_temp
      - network_link_status
      - network_tx
      - network_rx
      - drive_temp
      - volume_size_free
      - volume_size_used
      - drive_smart_status
      - volume_percentage_used

        ##########################################################
        ## DNS Lookup
        ##########################################################

  - platform: dnsip
  - platform: dnsip
    hostname: !secret secret_dns_home_hostname
    name: REDACTED
  - platform: dnsip
    hostname: !secret secret_dns_REDACTED_hostname
    name: REDACTED
  - platform: dnsip
    hostname: !secret secret_dns_parents_hostname
    name: REDACTED

        ##########################################################
        ## Battery Sensors
        ##########################################################

  - platform: template
    sensors:
      basement_door_battery:
        value_template: '{{ states.binary_sensor.basement_door.attributes.battery_level }}'
        friendly_name: 'Basement Door'
        unit_of_measurement: '%'
      pantry_door_battery:
        value_template: '{{ states.binary_sensor.pantry_door.attributes.battery_level }}'
        friendly_name: 'Pantry Door'
        unit_of_measurement: '%'
      hall_closet_door_battery:
        value_template: '{{ states.binary_sensor.hall_closet_door.attributes.battery_level }}'
        friendly_name: 'Hall Closet Door'
        unit_of_measurement: '%'
      basement_motion_battery:
        value_template: '{{ states.binary_sensor.basement_motion_sensor.attributes.battery_level }}'
        friendly_name: 'Basement Motion'
        unit_of_measurement: '%'
      basement_drain_water_sensor_battery:
        value_template: '{{ states.binary_sensor.basement_drain_water_sensor.attributes.battery_level }}'
        friendly_name: 'Basement Drain Water Sensor'
        unit_of_measurement: '%'
      filtration_water_sensor_battery:
        value_template: '{{ states.binary_sensor.filtration_water_sensor.attributes.battery_level }}'
        friendly_name: 'Filtration Water Sensor'
        unit_of_measurement: '%'
      kitchen_sink_water_sensor_battery:
        value_template: '{{ states.binary_sensor.kitchen_sink_water_sensor.attributes.battery_level }}'
        friendly_name: 'Kitchen Sink Water Sensor'
        unit_of_measurement: '%'
      refrigerator_water_sensor_battery:
        value_template: '{{ states.binary_sensor.refrigerator_water_sensor.attributes.battery_level }}'
        friendly_name: 'Refrigerator Water Sensor'
        unit_of_measurement: '%'
      washing_machine_water_sensor_battery:
        value_template: '{{ states.binary_sensor.washing_machine_water_sensor.attributes.battery_level }}'
        friendly_name: 'Washing Machine Water Sensor'
        unit_of_measurement: '%'


        ##########################################################
        ## Washing Machine
        ##########################################################

  - platform: template
    sensors:
      washing_machine_current_power:
        value_template: '{{ states.switch.washing_machine.attributes.current_power_w }}'

  - platform: template
    sensors:
      washing_machine_status:
        value_template: >-
          {%- if states('sensor.washing_machine_current_power') | int >= 3 %}
            running
          {% else %}
            not running
          {% endif %}
        friendly_name: 'Washing Machine Status'

        ##########################################################
        ## Biocube - Water Input Number Sensors
        ##########################################################       

  - platform: template
    sensors:
      biocube_ph:
        value_template: '{{ states.input_number.biocube_ph.state | float }}'
        friendly_name: 'Biocube pH Sensor'
        unit_of_measurement: 'pH'

  - platform: template
    sensors:
      biocube_ammonia:
        value_template: '{{ states.input_number.biocube_ammonia.state | float }}'
        friendly_name: 'Biocube Ammonia Sensor'
        unit_of_measurement: 'ppm'

  - platform: template
    sensors:
      biocube_nitrite:
        value_template: '{{ states.input_number.biocube_nitrite.state | float }}'
        friendly_name: 'Biocube Nitrite Sensor'
        unit_of_measurement: 'ppm'

  - platform: template
    sensors:
      biocube_nitrate:
        value_template: '{{ states.input_number.biocube_nitrate.state | float }}'
        friendly_name: 'Biocube Nitrate Sensor'
        unit_of_measurement: 'ppm'

  - platform: template
    sensors:
      biocube_calcium:
        value_template: '{{ states.input_number.biocube_calcium.state | float }}'
        friendly_name: 'Biocube Calcium Sensor'
        unit_of_measurement: 'ppm'

        ##########################################################
        ## Biocube Heater
        ##########################################################

  - platform: template
    sensors:
      biocube_heater_current_power:
        value_template: '{{ states.switch.biocube_heater.attributes.current_power_w }}'

  - platform: template
    sensors:
      biocube_heater_status:
        value_template: >-
          {%- if states('sensor.biocube_heater_current_power') | int >= 1 %}
            running
          {% else %}
            not running
          {% endif %}
        friendly_name: 'Biocube Heater Status'

        ##########################################################
        ## Biocube Pump
        ##########################################################

  - platform: template
    sensors:
      biocube_pump_current_power:
        value_template: '{{ states.switch.biocube_pump.attributes.current_power_w }}'

  - platform: template
    sensors:
      biocube_pump_status:
        value_template: >-
          {%- if states('sensor.biocube_pump_current_power') | int >= 1 %}
            running
          {% else %}
            not running
          {% endif %}
        friendly_name: 'Biocube Pump Status'

        ##########################################################
        ## Biocube ATO
        ##########################################################

  - platform: template
    sensors:
      biocube_ato_current_power:
        value_template: '{{ states.switch.biocube_ato.attributes.current_power_w }}'

  - platform: template
    sensors:
      biocube_ato_status:
        value_template: >-
          {%- if states('sensor.biocube_ato_current_power') | int >= 1 %}
            running
          {% else %}
            not running
          {% endif %}
        friendly_name: 'Biocube ATO Status'
        ##########################################################
        ## Biocube Lights
        ##########################################################

  - platform: template
    sensors:
      biocube_lights_current_power:
        value_template: '{{ states.switch.biocube_lights.attributes.current_power_w }}'

  - platform: template
    sensors:
      biocube_lights_status:
        value_template: >-
          {%- if states('sensor.biocube_lights_current_power') | int >= 1 %}
            on
          {% else %}
            off
          {% endif %}
        friendly_name: 'Biocube Lights Status'

        ##########################################################
        ## Biocube Wavemaker
        ##########################################################

  - platform: template
    sensors:
      biocube_wavemaker_current_power:
        value_template: '{{ states.switch.biocube_wavemaker.attributes.current_power_w }}'

  - platform: template
    sensors:
      biocube_wavemaker_status:
        value_template: >-
          {%- if states('sensor.biocube_wavemaker_current_power') | int >= 1 %}
            running
          {% else %}
            not running
          {% endif %}
        friendly_name: 'Biocube Wavemaker Status'


        ##########################################################
        ## Fireplace
        ##########################################################

  - platform: template
    sensors:
      fireplace_current_power:
        value_template: '{{ states.switch.fireplace.attributes.current_power_w }}'

  - platform: template
    sensors:
      fireplace_status:
        value_template: >-
          {%- if states('sensor.fireplace_current_power') | int >= 1 %}
            running
          {% else %}
            not running
          {% endif %}
        friendly_name: 'Fireplace Status'

        ##########################################################
        ## Golf Cart
        ##########################################################

  - platform: template
    sensors:
      golf_cart_current_power:
        value_template: '{{ states.switch.golf_cart.attributes.current_power_w }}'

  - platform: template
    sensors:
      golf_cart_status:
        value_template: >-
          {% if states('sensor.golf_cart_current_power') | int >= 700 %}
            charging high power
          {% elif states('sensor.golf_cart_current_power') | int >= 200 %}
            charging
          {% elif states('sensor.golf_cart_current_power') | float >= 0.066 %}
            charged
          {% else %}
            unplugged
          {% endif %}
        friendly_name: 'Golf Cart Status'

        ##########################################################
        ## Lift Station Sensor
        ##########################################################

  - platform: template
    sensors:
      lift_station_status:
        value_template: >-
          {%- if states('sensor.e6_1_ct1_lift_station_watts') | int >= 10 %}
            running
          {% else %}
            not running
          {% endif %}
        friendly_name: 'Lift Station Status'

        ##########################################################
        ## Lift Station - Counter Sensors
        ##########################################################       

  - platform: template
    sensors:
      lift_station_activations_daily:
        value_template: '{{ states.counter.lift_station_activations_counter_current_day.state | int }}'
        friendly_name: 'Lift Station Activations Daily Sensor'
        unit_of_measurement: 'Count'

        ##########################################################
        ## HVAC Honeywell Air Cleaner
        ##########################################################

  - platform: template
    sensors:
      air_cleaner_current_power:
        value_template: '{{ states.switch.air_cleaner.attributes.current_power_w }}'
  - platform: template
    sensors:
      air_cleaner_status:
        value_template: >-
          {% if states('sensor.air_cleaner_current_power') | int <= 10 %}
            not running
          {% elif states('sensor.air_cleaner_current_power') | int >= 32 %}
            running high power
          {% else %}
            running
          {% endif %}
        friendly_name: 'Air Cleaner Status'

        ##########################################################
        ## HVAC Geothermal Sensors
        ##########################################################

  - platform: template
    sensors:
      thermostat_aux_heat:
        value_template: '{{ states.climate.home.attributes.aux_heat }}'

        ##########################################################
        ## Media Center
        ##########################################################

  - platform: template
    sensors:
      media_center:
        value_template: '{{ states.remote.media_center.attributes.current_activity }}'
        friendly_name: 'Media Center'

        ##########################################################
        ## Nest Protect Smoke and CO
        ##########################################################

  - platform: nest
    monitored_conditions:
       - 'co_status'
       - 'smoke__status'

        ##########################################################
        ## Dark Sky Sensor
        ##########################################################

  - platform: darksky
    api_key: !secret secret_darksky_api_key
    monitored_conditions:
      - summary
      - minutely_summary
      - hourly_summary
      - daily_summary
      - nearest_storm_distance
      - nearest_storm_bearing
      - precip_type
      - precip_intensity
      - precip_probability
      - temperature
      - apparent_temperature
      - dew_point
      - wind_speed
      - wind_bearing
      - cloud_cover
      - humidity
      - pressure
      - visibility
      - ozone

        ##########################################################
        ## UPS Monitoring - Power
        ##########################################################

  - platform: nut
    name: UPS
    host: REDACTED.100
    port: 3493
    alias: REDACTED
    username: REDACTED
    password: REDACTED
    resources:
      - ups.status.display
      - battery.charge
      - battery.runtime
      - ups.load
      - input.voltage

  - platform: template
    sensors:
      ups_battery_runtime_mins:
        friendly_name: "UPS Battery Runtime"
        unit_of_measurement: 'minutes'
        value_template: "{{ states('sensor.ups_battery_runtime')|float / 60 |round(1) }}"

        ##########################################################
        ## IL COVID NUMBERS
        ##########################################################

#  - platform: scrape
#    name: IL Positivity Percentage
#    resource: https://www.dph.illinois.gov/restore
#    select: "#positivityRegion4 > h2"
#    attribute: "textContent"
#    unit_of_measurement: percent


#  - platform: scrape
#    name: IL Positivity Change
#    resource: https://www.dph.illinois.gov/restore
#    select: "#Region4Container > div:nth-child(3) > h2"
#    unit_of_measurement: percent

        ##########################################################
        ## Alarm System
        ##########################################################

  - platform: template
    sensors:
      alarm_system_trouble:
        value_template: '{{ states.sensor.home_alarm_keypad.attributes.trouble }}'
        friendly_name: 'Alarm System Trouble'

        ##########################################################
        ## National Weather Service Alerting - Custom Sensor
        ##########################################################

### WEATHER SERVICE Sensors
  - platform: nws_warnings
    zone_id: 'REDACTED'

  - platform: template
    sensors:
      nws_tornado_warning:
        value_template: '{{ states.sensor.nws_warnings.attributes.tornado_warning }}'
        friendly_name: 'Tornado Warning'
  - platform: template
    sensors:
      nws_tornado_watch:
        value_template: '{{ states.sensor.nws_warnings.attributes.tornado_watch }}'
        friendly_name: 'Tornado Watch'
  - platform: template
    sensors:
      nws_severe_thunderstorm_warning:
        value_template: '{{ states.sensor.nws_warnings.attributes.severe_thunderstorm_warning }}'
        friendly_name: 'Severe Thunderstorm Warning'
  - platform: template
    sensors:
      nws_winter_storm_warning:
        value_template: '{{ states.sensor.nws_warnings.attributes.winter_storm_warning }}'
        friendly_name: 'Winter Storm Warning'

        ##########################################################
        ## IOS Location Sensors
        ##########################################################

  - platform: template
    sensors:
      USER1_iphone_location:
        value_template: '{{ states.sensor.USER1_iphone_geocoded_location.attributes.Locality }}, {{ states.sensor.USER1_iphone_geocoded_location.attributes["Administrative Area"]}}'

  - platform: template
    sensors:
      USER2_iphone_location:
        value_template: '{{ states.sensor.USER2_iphone_geocoded_location.attributes.Locality }}, {{ states.sensor.USER2_iphone_geocoded_location.attributes["Administrative Area"]}}'

  - platform: template
    sensors:
      USER4_iphone_location:
        value_template: '{{ states.sensor.USER4_iphone_geocoded_location.attributes.Locality }}, {{ states.sensor.USER4_iphone_geocoded_location.attributes["Administrative Area"]}}'

  - platform: template
    sensors:
      USER3_iphone_location:
        value_template: '{{ states.sensor.USER3_iphone_geocoded_location.attributes.Locality }}, {{ states.sensor.USER3_iphone_geocoded_location.attributes["Administrative Area"]}}'

        ##########################################################
        ## Pico Remote Light Brightness Sensor
        ##########################################################
  - platform: template
    sensors:
      master_bedroom_brightness:
        value_template: '{{ states.light.master_bedroom.brightness_pct }}'
        friendly_name: 'Master Bedroom Brightness Percentage'




